enum TypeCompte {
  COURANT
  EPARGNE
}

type Query {
  allComptes: [Compte]
  compteById(id: ID): Compte
  totalSolde: SoldeStats
}

type Compte {
  id: ID
  solde: Float
  dateCreation: String
  type: TypeCompte
}

type Mutation {
  saveCompte(compte: CompteInput): Compte
}

input CompteInput {
  solde: Float
  dateCreation: String
  type: TypeCompte
}

input CompteRequest {
  solde: Float
  dateCreation: String
  type: TypeCompte
}

type SoldeStats {
  count: Int
  sum: Float
  average: Float
}


enum TypeTransaction {
  DEPOT
  RETRAIT
}

type Transaction {
  id: ID
  montant: Float
  date: String
  type: TypeTransaction
  compte: Compte
}

input TransactionInput {
  montant: Float
  date: String
  type: TypeTransaction
  compteId: ID
}

extend type Mutation {
  addTransaction(transaction: TransactionInput): Transaction
}

extend type Query {
  allTransactions: [Transaction]
  transactionById(id: ID): Transaction
}

